import { MedicalHistoryBase } from '../entities/medical-history-base.entity';
import { SpecialtyMedicalHistory } from '../entities/specialty-medical-history.entity';

export class MedicalHistoryBaseResponseDto {
  id: string;
  bloodType?: string;
  personalHistory?: string;
  chronicDiseases?: string;
  allergies?: string;
  allergyTypes?: string[];
  immunizations?: string;
  surgicalHistory?: string;
  surgeries?: any[];
  currentMedications?: string;
  medications?: any[];
  adverseReactions?: string;
  familyHistory?: string;
  familyDiseases?: any[];
  smoker?: boolean;
  smokingHistory?: string;
  alcoholConsumer?: boolean;
  alcoholHistory?: string;
  drugUser?: boolean;
  drugHistory?: string;
  physicalActivity?: string;
  diet?: string;
  pregnancies?: number;
  births?: number;
  abortions?: number;
  cesareans?: number;
  lastMenstrualPeriod?: string;
  menarche?: number;
  contraceptiveMethod?: string;
  occupation?: string;
  occupationalRisks?: string;
  workEnvironment?: string;
  malaria?: boolean;
  dengue?: boolean;
  tuberculosis?: boolean;
  chagas?: boolean;
  leishmaniasis?: boolean;
  travelHistory?: string;
  observations?: string;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;

  constructor(medicalHistoryBase: MedicalHistoryBase) {
    this.id = medicalHistoryBase.id;
    this.bloodType = medicalHistoryBase.bloodType;
    this.personalHistory = medicalHistoryBase.personalHistory;
    this.chronicDiseases = medicalHistoryBase.chronicDiseases;
    this.allergies = medicalHistoryBase.allergies;
    this.allergyTypes = medicalHistoryBase.allergyTypes;
    this.immunizations = medicalHistoryBase.immunizations;
    this.surgicalHistory = medicalHistoryBase.surgicalHistory;
    this.surgeries = medicalHistoryBase.surgeries;
    this.currentMedications = medicalHistoryBase.currentMedications;
    this.medications = medicalHistoryBase.medications;
    this.adverseReactions = medicalHistoryBase.adverseReactions;
    this.familyHistory = medicalHistoryBase.familyHistory;
    this.familyDiseases = medicalHistoryBase.familyDiseases;
    this.smoker = medicalHistoryBase.smoker;
    this.smokingHistory = medicalHistoryBase.smokingHistory;
    this.alcoholConsumer = medicalHistoryBase.alcoholConsumer;
    this.alcoholHistory = medicalHistoryBase.alcoholHistory;
    this.drugUser = medicalHistoryBase.drugUser;
    this.drugHistory = medicalHistoryBase.drugHistory;
    this.physicalActivity = medicalHistoryBase.physicalActivity;
    this.diet = medicalHistoryBase.diet;
    this.pregnancies = medicalHistoryBase.pregnancies;
    this.births = medicalHistoryBase.births;
    this.abortions = medicalHistoryBase.abortions;
    this.cesareans = medicalHistoryBase.cesareans;
    this.lastMenstrualPeriod = medicalHistoryBase.lastMenstrualPeriod?.toISOString();
    this.menarche = medicalHistoryBase.menarche;
    this.contraceptiveMethod = medicalHistoryBase.contraceptiveMethod;
    this.occupation = medicalHistoryBase.occupation;
    this.occupationalRisks = medicalHistoryBase.occupationalRisks;
    this.workEnvironment = medicalHistoryBase.workEnvironment;
    this.malaria = medicalHistoryBase.malaria;
    this.dengue = medicalHistoryBase.dengue;
    this.tuberculosis = medicalHistoryBase.tuberculosis;
    this.chagas = medicalHistoryBase.chagas;
    this.leishmaniasis = medicalHistoryBase.leishmaniasis;
    this.travelHistory = medicalHistoryBase.travelHistory;
    this.observations = medicalHistoryBase.observations;
    this.isActive = medicalHistoryBase.isActive;
    this.createdAt = medicalHistoryBase.createdAt;
    this.updatedAt = medicalHistoryBase.updatedAt;
  }
}

export class SpecialtyMedicalHistoryResponseDto {
  id: string;
  specialtyType: string;
  chiefComplaint: string;
  currentIllness: string;
  systemsReview?: string;
  generalPhysicalExam?: string;
  vitalSigns?: any;
  generalMedicine?: any;
  dermatology?: any;
  pediatrics?: any;
  urology?: any;
  obstetrics?: any;
  traumatology?: any;
  internalMedicine?: any;
  diagnoses: any[];
  treatmentPlan?: any;
  complementaryStudies?: any;
  followUp?: any;
  clinicalNotes?: string;
  observations?: string;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;

  constructor(specialtyMedicalHistory: SpecialtyMedicalHistory) {
    this.id = specialtyMedicalHistory.id;
    this.specialtyType = specialtyMedicalHistory.specialtyType;
    this.chiefComplaint = specialtyMedicalHistory.chiefComplaint;
    this.currentIllness = specialtyMedicalHistory.currentIllness;
    this.systemsReview = specialtyMedicalHistory.systemsReview;
    this.generalPhysicalExam = specialtyMedicalHistory.generalPhysicalExam;
    this.vitalSigns = specialtyMedicalHistory.vitalSigns;
    this.generalMedicine = specialtyMedicalHistory.generalMedicine;
    this.dermatology = specialtyMedicalHistory.dermatology;
    this.pediatrics = specialtyMedicalHistory.pediatrics;
    this.urology = specialtyMedicalHistory.urology;
    this.obstetrics = specialtyMedicalHistory.obstetrics;
    this.traumatology = specialtyMedicalHistory.traumatology;
    this.internalMedicine = specialtyMedicalHistory.internalMedicine;
    this.diagnoses = specialtyMedicalHistory.diagnoses;
    this.treatmentPlan = specialtyMedicalHistory.treatmentPlan;
    this.complementaryStudies = specialtyMedicalHistory.complementaryStudies;
    this.followUp = specialtyMedicalHistory.followUp;
    this.clinicalNotes = specialtyMedicalHistory.clinicalNotes;
    this.observations = specialtyMedicalHistory.observations;
    this.isActive = specialtyMedicalHistory.isActive;
    this.createdAt = specialtyMedicalHistory.createdAt;
    this.updatedAt = specialtyMedicalHistory.updatedAt;
  }
}
